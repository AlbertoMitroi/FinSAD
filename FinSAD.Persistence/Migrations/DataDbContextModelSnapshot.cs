// <auto-generated />
using System;
using FinSAD.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinSAD.Persistence.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinSAD.Domain.Entities.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Budgets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Month = 5,
                            UserId = 1,
                            Year = 2025
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CurrencyLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Holder")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProviderLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 27119m,
                            Currency = "USD",
                            CurrencyLogo = "USD.png",
                            Cvv = "**5",
                            Expiry = new DateTime(2035, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Holder = "Alberto Mitroi",
                            ProviderLogo = "citigroup.png",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 12102m,
                            Currency = "GBP",
                            CurrencyLogo = "GBP.png",
                            Cvv = "**9",
                            Expiry = new DateTime(2030, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Holder = "Alberto Mitroi",
                            ProviderLogo = "master card.png",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 7382m,
                            Currency = "EURO",
                            CurrencyLogo = "EURO.png",
                            Cvv = "**2",
                            Expiry = new DateTime(2026, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Holder = "Alberto Mitroi",
                            ProviderLogo = "visa.png",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCustom")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCustom = false,
                            Name = "Groceries"
                        },
                        new
                        {
                            Id = 2,
                            IsCustom = false,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 3,
                            IsCustom = true,
                            Name = "Custom Category"
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.FinanceReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FinanceReports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Format = "Pdf",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.FinancialGoal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinancialGoals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deadline = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vacation Fund"
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Message = "You have a new transaction.",
                            Status = "Unread",
                            Timestamp = new DateTime(2025, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "Info",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "CreditCard",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Type = "Cash",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.RecurringTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RecurringTransactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Frequency = "Monthly",
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionKind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Bought groceries at Walmart",
                            Name = "Grocery Shopping",
                            PaymentMethodId = 1,
                            TransactionKind = "Expense",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.Budget", b =>
                {
                    b.HasOne("FinSAD.Domain.Entities.User", "User")
                        .WithMany("Budgets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FinSAD.Domain.ValueObjects.Money", "Limit", b1 =>
                        {
                            b1.Property<int>("BudgetId")
                                .HasColumnType("int");

                            b1.HasKey("BudgetId");

                            b1.ToTable("Budgets");

                            b1.WithOwner()
                                .HasForeignKey("BudgetId");

                            b1.HasData(
                                new
                                {
                                    BudgetId = 1
                                });
                        });

                    b.Navigation("Limit")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.Card", b =>
                {
                    b.HasOne("FinSAD.Domain.Entities.User", null)
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.FinanceReport", b =>
                {
                    b.HasOne("FinSAD.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.FinancialGoal", b =>
                {
                    b.OwnsOne("FinSAD.Domain.ValueObjects.Money", "CurrentAmount", b1 =>
                        {
                            b1.Property<int>("FinancialGoalId")
                                .HasColumnType("int");

                            b1.HasKey("FinancialGoalId");

                            b1.ToTable("FinancialGoals");

                            b1.WithOwner()
                                .HasForeignKey("FinancialGoalId");

                            b1.HasData(
                                new
                                {
                                    FinancialGoalId = 1
                                });
                        });

                    b.OwnsOne("FinSAD.Domain.ValueObjects.Money", "TargetAmount", b1 =>
                        {
                            b1.Property<int>("FinancialGoalId")
                                .HasColumnType("int");

                            b1.HasKey("FinancialGoalId");

                            b1.ToTable("FinancialGoals");

                            b1.WithOwner()
                                .HasForeignKey("FinancialGoalId");

                            b1.HasData(
                                new
                                {
                                    FinancialGoalId = 1
                                });
                        });

                    b.Navigation("CurrentAmount");

                    b.Navigation("TargetAmount");
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.Notification", b =>
                {
                    b.HasOne("FinSAD.Domain.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.PaymentMethod", b =>
                {
                    b.HasOne("FinSAD.Domain.Entities.User", "User")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("FinSAD.Domain.Entities.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("FinSAD.Domain.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("FinSAD.Domain.ValueObjects.Money", "Amount", b1 =>
                        {
                            b1.Property<int>("TransactionId")
                                .HasColumnType("int");

                            b1.HasKey("TransactionId");

                            b1.ToTable("Transactions");

                            b1.WithOwner()
                                .HasForeignKey("TransactionId");

                            b1.HasData(
                                new
                                {
                                    TransactionId = 1
                                });
                        });

                    b.OwnsOne("FinSAD.Domain.ValueObjects.Location", "Location", b1 =>
                        {
                            b1.Property<int>("TransactionId")
                                .HasColumnType("int");

                            b1.HasKey("TransactionId");

                            b1.ToTable("Transactions");

                            b1.WithOwner()
                                .HasForeignKey("TransactionId");

                            b1.HasData(
                                new
                                {
                                    TransactionId = 1
                                });
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("PaymentMethod");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.User", b =>
                {
                    b.OwnsOne("FinSAD.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = 1,
                                    Address = "albertomitroi@gmail.com"
                                });
                        });

                    b.OwnsOne("FinSAD.Domain.ValueObjects.PasswordHash", "PasswordHash", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("Hash")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");

                            b1.HasData(
                                new
                                {
                                    UserId = 1,
                                    Hash = "hashed@password@123"
                                });
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("PasswordHash")
                        .IsRequired();
                });

            modelBuilder.Entity("FinSAD.Domain.Entities.User", b =>
                {
                    b.Navigation("Budgets");

                    b.Navigation("Cards");

                    b.Navigation("Notifications");

                    b.Navigation("PaymentMethods");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
